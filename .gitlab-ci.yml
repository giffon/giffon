stages:
  - build
  - test
  - deploy

.build:
  stage: build
  script:
    - apk add nodejs npm python make g++ git curl
    # only checkout the submodules under lib, because MRs don't have access to private
    - git submodule sync lib
    - git submodule update --init lib
    - npm install -g rimraf # https://github.com/Luehang/react-paypal-button-v2/issues/27
    - npm install --unsafe-perm
    - npm run-script build-vendor
    - haxelib list
    - haxe build.hxml
    - haxe build-test.hxml
  artifacts:
    paths:
      - www/js/BrowserMain.js
      - www/js/BrowserMain.js.map
      - www/js/vendor.js
      - ServerMain.js
      - ServerMain.js.map
      - test/SeleniumTest.py
      - test/Spellcheck.js
      - node_modules

build-haxe4:
  extends: .build
  image: haxe:4.0.5-alpine3.10

test-spellcheck:
  image: node:10-alpine
  dependencies:
    - build-haxe4
  stage: test
  script:
    - node test/Spellcheck.js

.test-selenium:
  image: alpine:3.10
  variables:
    MYSQL_ROOT_PASSWORD: devroot
    MYSQL_DATABASE: giffon
    DB_HOST: mysql
    DB_USER: root
    DB_PASSWORD: $MYSQL_ROOT_PASSWORD
  script:
    - apk add nodejs npm mysql-client openjdk8-jre python3 python3-dev openssl gcc libc-dev linux-headers
    # initialize mysql
    - mysql -h mysql -u root --password="$MYSQL_ROOT_PASSWORD" "$MYSQL_DATABASE" -e "source dev/initdb/01_giffon.sql"
    - mysql -h mysql -u root --password="$MYSQL_ROOT_PASSWORD" "$MYSQL_DATABASE" -e "source dev/initdb/02_giffon.sql"
    # figure out host container ip
    - cat /etc/hosts
    - export WEB_HOST="$(cat /etc/hosts | grep -Eo '^([0-9\.]*)\s+runner-[0-9a-f]+-project-[0-9a-f]+-concurrent-[0-9]+' | grep -Eo '^([0-9\.]*)')"
    - echo "${WEB_HOST}"
    # generate self-signed cert for https
    - cd dev/ssl
    - ./gen.sh "${WEB_HOST}"
    - cd ../..
    # test (validation)
    - npm start &
    - sleep 3 # allow displaying some server init messages
    - pip3 install html5validator
    - html5validator --html http://localhost:3000
    - html5validator --css www/css/*.css
    - html5validator --svg --errors-only www/images/*.svg
    # test (selenium)
    - pip3 install -r src/test/requirements.txt
    - python3 test/SeleniumTest.py
  artifacts:
    when: always
    paths:
      - test/errorShots

test-haxe4-chrome:
  extends: .test-selenium
  dependencies:
    - build-haxe4
  stage: test
  services:
    - mysql:5.7
    - selenium/standalone-chrome:3.141.59-radium
  variables:
    BROWSER_NAME: chrome
    HUB_HOST: selenium-standalone-chrome
  except:
    - merge_requests

deploy-s3:
  stage: deploy
  dependencies:
    - build-haxe4
  image: python:alpine
  script:
    - pip install awscli
    - aws s3 sync --delete www "s3://static.giffon.io/${CI_COMMIT_REF_NAME}"
  only:
    - master
    - production
  except:
    - tags
    - schedules
    - merge_requests

deploy-serverless:
  stage: deploy
  dependencies:
    - build-haxe4
  image: node:10-alpine
  script:
    - npx serverless deploy --stage "${CI_COMMIT_REF_NAME}"
  only:
    - master
    - production
  except:
    - tags
    - schedules
    - merge_requests
