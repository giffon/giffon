build-haxe:
  stage: build
  image: haxe:3.4.7-alpine
  variables:
    GIT_SUBMODULE_STRATEGY: recursive
  script:
    - haxe install-haxelibs.hxml
    - haxelib list
    - haxe build.hxml
  artifacts:
    paths:
      - www/js/BrowserMain.js
      - ServerMain.js
      - test/specs/*.js

build-npm:
  stage: build
  image: alpine:3.8
  script:
    - apk add nodejs npm python make g++
    - npm install
  artifacts:
    paths:
      - node_modules

test:
  stage: test
  image: alpine:3.8
  services:
    - mysql:5.6
    - selenium/hub:3.14.0-krypton
    - selenium/node-chrome:3.14.0-krypton
    - selenium/node-firefox:3.14.0-krypton
  variables:
    MYSQL_ROOT_PASSWORD: devroot
    MYSQL_DATABASE: giffon
    DB_HOST: mysql
    DB_USER: root
    DB_PASSWORD: $MYSQL_ROOT_PASSWORD
    HUB_HOST: selenium-hub
  script:
    - apk add nodejs npm mysql-client openjdk8-jre python3
    # initialize mysql
    - mysql -h mysql -u root --password="$MYSQL_ROOT_PASSWORD" "$MYSQL_DATABASE" -e "source dev/initdb/giffon.sql"
    # figure out host container ip
    - cat /etc/hosts
    - export WEB_HOST="$(cat /etc/hosts | grep -Eo '^([0-9\.]*)\s+runner-[0-9a-f]+-project-[0-9a-f]+-concurrent-[0-9]+' | grep -Eo '^([0-9\.]*)')"
    - echo "${WEB_HOST}"
    # test
    - npm start
    - sleep 3 # allow displaying some server init messages
    - pip3 install html5validator
    - html5validator --html http://localhost:3000
    - html5validator --css www/css/*.css
    - html5validator --svg --errors-only www/images/*.svg
    - npm test -- --host "${HUB_HOST}" --baseUrl "http://${WEB_HOST}:3000"
    - npm stop
  artifacts:
    paths:
      - test/errorShots

deploy-serverless:
  stage: deploy
  image: node:8-alpine
  script:
    - npm install -g serverless
    - serverless deploy --stage "${CI_COMMIT_REF_NAME}"
  only:
    - master
    - production
  except:
    - tags
    - schedules
