# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: giffon-web # NOTE: update this with your service name

app: giffon
tenant: andyli

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
# frameworkVersion: "=X.X.X"

provider:
  name: aws
  runtime: nodejs8.10
  timeout: 30
  environment:
    SERVERLESS_STAGE: ${opt:stage}
    DB_HOST: ${ssm:DB_HOST}
    DB_PASSWORD: ${ssm:DB_PASSWORD}
    DB_SALT: ${ssm:DB_SALT}
    DB_USER: ${ssm:DB_USER}
    STRIPE_SECKEY: ${ssm:STRIPE_SECKEY}

# you can overwrite defaults here
#  stage: dev
#  region: us-east-1

# you can add statements to the Lambda function's IAM Role here
#  iamRoleStatements:
#    - Effect: "Allow"
#      Action:
#        - "s3:ListBucket"
#      Resource: { "Fn::Join" : ["", ["arn:aws:s3:::", { "Ref" : "ServerlessDeploymentBucket" } ] ]  }
#    - Effect: "Allow"
#      Action:
#        - "s3:PutObject"
#      Resource:
#        Fn::Join:
#          - ""
#          - - "arn:aws:s3:::"
#            - "Ref" : "ServerlessDeploymentBucket"
#            - "/*"

package:
  exclude:
    - chrome/**
    - auth0/**

functions:
  express:
    handler: handler.express
    vpc:
      securityGroupIds:
        - sg-0612eceb4bb1b3096
      subnetIds:
        - subnet-586ce93f
        - subnet-c3199f9f
        - subnet-7ef68971
        - subnet-f98c44c7
        - subnet-6f0a8a41
        - subnet-4afca900
        - subnet-07533194c1ea46768
        - subnet-0cdfb1c5798e57be4
        - subnet-044f51ef1c4913471
        - subnet-0ae4532f1abdab38e
        - subnet-08d042a1dacd507ac
        - subnet-0e3824b6b74b1613e

    events:
      - http:
          method: ANY
          path: '/'
          cors: true
      - http:
          method: ANY
          path: '{proxy+}'
          cors: true

#    The following are a few example events you can configure
#    NOTE: Please make sure to change your handler code to work with those events
#    Check the event documentation for details
#    events:
#      - http:
#          path: users/create
#          method: get
#      - s3: ${env:BUCKET}
#      - schedule: rate(10 minutes)
#      - sns: greeter-topic
#      - stream: arn:aws:dynamodb:region:XXXXXX:table/foo/stream/1970-01-01T00:00:00.000
#      - alexaSkill: amzn1.ask.skill.xx-xx-xx-xx
#      - alexaSmartHome: amzn1.ask.skill.xx-xx-xx-xx
#      - iot:
#          sql: "SELECT * FROM 'some_topic'"
#      - cloudwatchEvent:
#          event:
#            source:
#              - "aws.ec2"
#            detail-type:
#              - "EC2 Instance State-change Notification"
#            detail:
#              state:
#                - pending
#      - cloudwatchLog: '/aws/lambda/hello'
#      - cognitoUserPool:
#          pool: MyUserPool
#          trigger: PreSignUp

#    Define function environment variables here
#    environment:
#      variable2: value2

# you can add CloudFormation resource templates here
#resources:
#  Resources:
#    NewResource:
#      Type: AWS::S3::Bucket
#      Properties:
#        BucketName: my-new-bucket
#  Outputs:
#     NewOutput:
#       Description: "Description for the output"
#       Value: "Some output value"

plugins:
  - serverless-apigw-binary

custom:
  apigwBinary:
    types:
      - '*/*'
